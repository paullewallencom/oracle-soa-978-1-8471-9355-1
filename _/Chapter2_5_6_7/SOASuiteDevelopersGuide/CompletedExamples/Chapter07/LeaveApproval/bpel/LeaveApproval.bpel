<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Jul 10 03:28:33 GMT 2008
  Author:  mswright
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="LeaveApproval"
         targetNamespace="http://xmlns.packtpub.com/LeaveApproval"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:wfcommon="http://xmlns.oracle.com/bpel/workflow/common"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:wf="http://schemas.oracle.com/bpel/extension/workflow"
         xmlns:client="http://xmlns.packtpub.com/LeaveApproval"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:taskservice="http://xmlns.oracle.com/bpel/workflow/taskService"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ns1="http://schemas.packtpub.com/LeaveRequest"
         xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
         xmlns:ns3="http://xmlns.oracle.com/bpel"
         xmlns:ns2="http://xmlns.packtpub.com/LeaveApproval/LeaveApprovalDecisionService"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:task="http://xmlns.oracle.com/bpel/workflow/task"
         xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc">
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="client" partnerLinkType="client:LeaveApproval"
                     myRole="LeaveApprovalProvider"
                     partnerRole="LeaveApprovalRequester"/>
        <partnerLink myRole="TaskServiceCallbackListener" name="TaskService"
                     partnerRole="TaskService"
                     partnerLinkType="taskservice:TaskService"/>
        <partnerLink name="LeaveApprovalDecisionServicePL"
                     partnerRole="IDecisionService_Role"
                     partnerLinkType="ns2:IDecisionService_PL"/>
    </partnerLinks>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="inputVariable"
                  messageType="client:LeaveApprovalRequestMessage"/>
        <variable name="outputVariable"
                  messageType="client:LeaveApprovalResponseMessage"/>
        <variable name="LeaveRequest_globalVariable"
                  messageType="taskservice:taskMessage"/>
    </variables>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in LeaveApproval.wsdl) -->
        <receive name="receiveInput" partnerLink="client"
                 portType="client:LeaveApproval" operation="initiate"
                 variable="inputVariable" createInstance="yes"/>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <assign name="setRequestStatus">
            <copy>
                <from expression="'Manual'"/>
                <to variable="inputVariable" part="payload"
                    query="/ns1:leaveRequest/ns1:requestStatus"/>
            </copy>
        </assign>
        <scope name="CheckLeaveApproval">
            <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:decide"></bpelx:pattern>
            </bpelx:annotation>
            <variables>
                <variable name="com_packtpub_schemas_leaverequest_LeaveRequest_i"
                          element="ns1:leaveRequest"/>
                <variable name="com_packtpub_schemas_leaverequest_LeaveRequest_o"
                          element="ns1:leaveRequest"/>
                <variable name="dsIn"
                          messageType="ns2:assertExecuteWatchStatelessMessage"/>
                <variable name="dsOut"
                          messageType="ns2:assertExecuteWatchStatelessDecisionMessage"/>
            </variables>
            <sequence name="Sequence_1">
                <assign name="BPEL_Var_To_Rule_Facts">
                    <copy>
                        <from variable="inputVariable" part="payload"
                              query="/ns1:leaveRequest"/>
                        <to variable="com_packtpub_schemas_leaverequest_LeaveRequest_i"
                            query="/ns1:leaveRequest"/>
                    </copy>
                </assign>
                <assign name="Facts_To_Rule_Service">
                    <copy>
                        <from variable="com_packtpub_schemas_leaverequest_LeaveRequest_i"/>
                        <to variable="dsIn" part="payload"
                            query="/ns2:assertExecuteWatchStateless/ns2:assertList/ns1:leaveRequest"/>
                    </copy>
                </assign>
                <assign name="BPEL_Header">
                    <copy>
                        <from expression="'LeaveApprovalDecisionService'"/>
                        <to variable="dsIn" part="payload"
                            query="/ns2:assertExecuteWatchStateless/@name"/>
                    </copy>
                    <copy>
                        <from expression="concat(ora:getProcessURL(), '/decisionservices.decs')"/>
                        <to variable="dsIn" part="payload"
                            query="/ns2:assertExecuteWatchStateless/ns2:configURL"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessId()"/>
                        <to variable="dsIn" part="payload"
                            query="/ns2:assertExecuteWatchStateless/ns2:bpelInstance/ns3:processId"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessVersion()"/>
                        <to variable="dsIn" part="payload"
                            query="/ns2:assertExecuteWatchStateless/ns2:bpelInstance/ns3:processVersion"/>
                    </copy>
                    <copy>
                        <from expression="ora:getDomainId()"/>
                        <to variable="dsIn" part="payload"
                            query="/ns2:assertExecuteWatchStateless/ns2:bpelInstance/ns3:domainId"/>
                    </copy>
                    <copy>
                        <from expression="ora:getProcessURL()"/>
                        <to variable="dsIn" part="payload"
                            query="/ns2:assertExecuteWatchStateless/ns2:bpelInstance/ns3:processURL"/>
                    </copy>
                    <copy>
                        <from expression="ora:getInstanceId()"/>
                        <to variable="dsIn" part="payload"
                            query="/ns2:assertExecuteWatchStateless/ns2:bpelInstance/ns3:instanceId"/>
                    </copy>
                </assign>
                <invoke name="Invoke"
                        partnerLink="LeaveApprovalDecisionServicePL"
                        portType="ns2:IDecisionService"
                        operation="assertExecuteWatchStateless"
                        inputVariable="dsIn" outputVariable="dsOut"/>
                <assign name="Rule_Service_To_Facts">
                    <copy>
                        <from variable="dsOut" part="payload"
                              query="/ns2:assertExecuteWatchStatelessDecision/ns2:resultList/ns1:leaveRequest"/>
                        <to variable="com_packtpub_schemas_leaverequest_LeaveRequest_o"/>
                    </copy>
                </assign>
                <assign name="Facts_To_BPEL_Var">
                    <copy>
                        <from variable="com_packtpub_schemas_leaverequest_LeaveRequest_o"
                              query="/ns1:leaveRequest"/>
                        <to variable="inputVariable" part="payload"
                            query="/ns1:leaveRequest"/>
                    </copy>
                </assign>
            </sequence>
        </scope>
        <switch name="ManualApproval">
            <case condition="bpws:getVariableData('inputVariable','payload','/ns1:leaveRequest/ns1:requestStatus') != 'Approved'">
                <sequence name="Sequence_2">
                    <scope name="LeaveRequest_1"
                           xmlns:wf="http://schemas.oracle.com/bpel/extension/workflow"
                           wf:key="LeaveRequest_1_globalVariable">
                        <bpelx:annotation>
                            <bpelx:pattern patternName="bpelx:workflow"></bpelx:pattern>
                        </bpelx:annotation>
                        <variables>
                            <variable name="initiateTaskInput"
                                      messageType="taskservice:initiateTaskMessage"/>
                            <variable name="initiateTaskResponseMessage"
                                      messageType="taskservice:initiateTaskResponseMessage"/>
                        </variables>
                        <correlationSets>
                            <correlationSet name="WorkflowTaskIdCor"
                                            properties="taskservice:taskId"/>
                        </correlationSets>
                        <sequence>
                            <assign name="LeaveRequest_AssignTaskAttributes">
                                <copy>
                                    <from expression="concat(ora:getProcessURL(), string('/LeaveRequest/LeaveRequest.task'))"/>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:taskDefinitionURI"/>
                                </copy>
                                <copy>
                                    <from expression="number(3)"/>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:priority"/>
                                </copy>
                                <copy>
                                    <from>
                                        <payload xmlns="http://xmlns.oracle.com/bpel/workflow/task">
                                            <leaveRequest xmlns="http://schemas.packtpub.com/LeaveRequest"/>
                                        </payload>
                                    </from>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:payload"/>
                                </copy>
                                <copy>
                                    <from expression="concat(string('Leave Request for '), bpws:getVariableData('inputVariable','payload','/ns1:leaveRequest/ns1:fullName'))"/>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:title"/>
                                </copy>
                                <copy>
                                    <from variable="inputVariable"
                                          part="payload"
                                          query="/ns1:leaveRequest"/>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:payload/ns1:leaveRequest"/>
                                </copy>
                                <copy>
                                    <from expression="bpws:getVariableData('inputVariable','payload','/ns1:leaveRequest/ns1:employeeId')"/>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:creator"/>
                                </copy>
                            </assign>
                            <assign name="LeaveRequest_AssignSystemTaskAttributes">
                                <copy>
                                    <from expression="ora:getInstanceId()"/>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:processInfo/task:instanceId"/>
                                </copy>
                                <copy>
                                    <from expression="ora:getProcessId()"/>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:processInfo/task:processName"/>
                                </copy>
                                <copy>
                                    <from expression="ora:getProcessId()"/>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:processInfo/task:processId"/>
                                </copy>
                                <copy>
                                    <from expression="ora:getProcessVersion()"/>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:processInfo/task:processVersion"/>
                                </copy>
                                <copy>
                                    <from expression="ora:getDomainId()"/>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:processInfo/task:domainId"/>
                                </copy>
                                <copy>
                                    <from expression="string('BPEL')"/>
                                    <to variable="initiateTaskInput"
                                        part="payload"
                                        query="/taskservice:initiateTask/task:task/task:processInfo/task:processType"/>
                                </copy>
                            </assign>
                            <invoke name="initiateTask_LeaveRequest"
                                    partnerLink="TaskService"
                                    portType="taskservice:TaskService"
                                    operation="initiateTask"
                                    inputVariable="initiateTaskInput"
                                    outputVariable="initiateTaskResponseMessage">
                                <correlations>
                                    <correlation initiate="yes"
                                                 set="WorkflowTaskIdCor"
                                                 pattern="in"/>
                                </correlations>
                            </invoke>
                            <receive name="receiveCompletedTask_LeaveRequest"
                                     partnerLink="TaskService"
                                     portType="taskservice:TaskServiceCallback"
                                     operation="onTaskCompleted"
                                     variable="LeaveRequest_globalVariable"
                                     createInstance="no">
                                <correlations>
                                    <correlation initiate="no"
                                                 set="WorkflowTaskIdCor"/>
                                </correlations>
                            </receive>
                        </sequence>
                    </scope>
                    <switch name="taskSwitch">
                        <case condition="bpws:getVariableData('LeaveRequest_globalVariable', 'payload', '/task:task/task:systemAttributes/task:state') = 'COMPLETED' and bpws:getVariableData('LeaveRequest_globalVariable', 'payload', '/task:task/task:systemAttributes/task:outcome') = 'REJECT'">
                            <bpelx:annotation>
                                <bpelx:pattern>Task outcome is REJECT</bpelx:pattern>
                            </bpelx:annotation>
                            <sequence>
                                <assign name="CopyPayloadFromTask">
                                    <copy>
                                        <from variable="LeaveRequest_globalVariable"
                                              part="payload"
                                              query="/task:task/task:payload/ns1:leaveRequest"/>
                                        <to variable="inputVariable"
                                            part="payload"
                                            query="/ns1:leaveRequest"/>
                                    </copy>
                                    <copy>
                                        <from expression="'Rejected'"/>
                                        <to variable="inputVariable"
                                            part="payload"
                                            query="/ns1:leaveRequest/ns1:requestStatus"/>
                                    </copy>
                                </assign>
                            </sequence>
                        </case>
                        <case condition="bpws:getVariableData('LeaveRequest_globalVariable', 'payload', '/task:task/task:systemAttributes/task:state') = 'COMPLETED' and bpws:getVariableData('LeaveRequest_globalVariable', 'payload', '/task:task/task:systemAttributes/task:outcome') = 'APPROVE'">
                            <bpelx:annotation>
                                <bpelx:pattern>Task outcome is APPROVE</bpelx:pattern>
                            </bpelx:annotation>
                            <sequence>
                                <assign name="CopyPayloadFromTask">
                                    <copy>
                                        <from variable="LeaveRequest_globalVariable"
                                              part="payload"
                                              query="/task:task/task:payload/ns1:leaveRequest"/>
                                        <to variable="inputVariable"
                                            part="payload"
                                            query="/ns1:leaveRequest"/>
                                    </copy>
                                    <copy>
                                        <from expression="'Approved'"/>
                                        <to variable="inputVariable"
                                            part="payload"
                                            query="/ns1:leaveRequest/ns1:requestStatus"/>
                                    </copy>
                                </assign>
                            </sequence>
                        </case>
                        <otherwise>
                            <bpelx:annotation>
                                <bpelx:pattern>Task is outcome is EXPIRED, STALE, WITHDRAWN or ERRORED</bpelx:pattern>
                            </bpelx:annotation>
                            <sequence>
                                <assign name="CopyPayloadFromTask">
                                    <copy>
                                        <from variable="LeaveRequest_globalVariable"
                                              part="payload"
                                              query="/task:task/task:payload/ns1:leaveRequest"/>
                                        <to variable="inputVariable"
                                            part="payload"
                                            query="/ns1:leaveRequest"/>
                                    </copy>
                                    <copy>
                                        <from expression="'Rejected'"/>
                                        <to variable="inputVariable"
                                            part="payload"
                                            query="/ns1:leaveRequest/ns1:requestStatus"/>
                                    </copy>
                                </assign>
                            </sequence>
                        </otherwise>
                    </switch>
                </sequence>
            </case>
            <otherwise>
                <empty name="Empty"/>
            </otherwise>
        </switch>
        <assign name="setOutput">
            <copy>
                <from variable="inputVariable" part="payload"
                      query="/ns1:leaveRequest"/>
                <to variable="outputVariable" part="payload"
                    query="/ns1:leaveRequest"/>
            </copy>
        </assign>
        <invoke name="callbackClient" partnerLink="client"
                portType="client:LeaveApprovalCallback" operation="onResult"
                inputVariable="outputVariable"/>
    </sequence>
</process>